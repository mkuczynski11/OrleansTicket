∑
ZC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Actors\Event.cs
	namespace 	
OrleansTicket
 
. 
Actors 
{ 
public 

	interface 
IEventGrain  
:! "
IGrainWithGuidKey# 4
{		 
Task

 
<

 
Guid

 
>

 
InitializeEvent

 "
(

" #
string

# )
name

* .
,

. /
double

0 6
duration

7 ?
,

? @
string

A G
location

H P
,

P Q
DateTime

R Z
date

[ _
,

_ `
List

a e
<

e f
CreateSeatData

f t
>

t u
seats

v {
)

{ |
;

| }
Task 
< 
FullEventDetails 
> 
UpdateEventInfo .
(. /
string/ 5
name6 :
,: ;
double< B
durationC K
,K L
stringM S
locationT \
,\ ]
DateTime^ f
dateg k
)k l
;l m
Task 
< 
EventDetails 
> 
GetEventInfo '
(' (
)( )
;) *
Task 
< 
FullEventDetails 
> 
GetFullEventInfo /
(/ 0
string0 6
currency7 ?
)? @
;@ A
Task 
< 
MinimalEventData 
> 
GetMinimalInfo -
(- .
). /
;/ 0
Task 
CancelEvent 
( 
) 
; 
Task 
< 
bool 
> 
CreateReservation $
($ %
string% +
seatId, 2
)2 3
;3 4
Task 
CancelReservation 
( 
string %
seatId& ,
), -
;- .
} 
public 

sealed 
class 

EventGrain "
:" #
Grain$ )
,) *
IEventGrain+ 6
{ 
ILogger 
< 

EventGrain 
> 
_logger #
;# $
public 

EventGrain 
( 
ILogger !
<! "

EventGrain" ,
>, -
logger. 4
)4 5
{ 	
_logger 
= 
logger 
; 
} 	
private 
bool 
IsInitialized "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
false3 8
;8 9
private 
string 
Name 
{ 
get !
;! "
set# &
;& '
}( )
=* +
$str, .
;. /
private   
double   
Duration   
{    !
get  " %
;  % &
set  ' *
;  * +
}  , -
private!! 
string!! 
Location!! 
{!!  !
get!!" %
;!!% &
set!!' *
;!!* +
}!!, -
=!!. /
$str!!0 2
;!!2 3
private"" 
DateTime"" 
Date"" 
{"" 
get""  #
;""# $
set""% (
;""( )
}""* +
private## 
string## 
Status## 
{## 
get##  #
;### $
set##% (
;##( )
}##* +
=##, -
$str##. 0
;##0 1
private$$ 
List$$ 
<$$ 
Seat$$ 
>$$ 
	_seatList$$ $
=$$% &
new$$' *
($$* +
)$$+ ,
;$$, -
private%% 

Dictionary%% 
<%% 
string%% !
,%%! "
IReservationGrain%%# 4
>%%4 5 
_seatIdToReservation%%6 J
=%%K L
new%%M P
(%%P Q
)%%Q R
;%%R S
private&& 
static&& 
int&& "
FetchSimulationDelayMs&& 1
=&&2 3
$num&&4 8
;&&8 9
private'' 
static'' 
double'' &
FetchSimulationProbability'' 8
=''9 :
$num''; ?
;''? @
public(( 
Task(( 
<(( 
Guid(( 
>(( 
InitializeEvent(( )
((() *
string((* 0
name((1 5
,((5 6
double((7 =
duration((> F
,((F G
string((H N
location((O W
,((W X
DateTime((Y a
date((b f
,((f g
List((h l
<((l m
CreateSeatData((m {
>(({ |
seats	((} Ç
)
((Ç É
{)) 	
_logger** 
.** 
LogInformation** "
(**" #
$"**# %
$str**% 8
{**8 9
name**9 =
}**= >
"**> ?
)**? @
;**@ A
if++ 
(++ 
IsInitialized++ 
)++ 
{,, 
throw-- 
new--  
EventExistsException-- .
(--. /
)--/ 0
;--0 1
}.. 
Name00 
=00 
name00 
;00 
Duration11 
=11 
duration11 
;11  
Location22 
=22 
location22 
;22  
Date33 
=33 
date33 
;33 
Status44 
=44 
EventStates44  
.44  !
ACTIVE44! '
;44' (
seats55 
.55 
ForEach55 
(55 
seat55 
=>55 !
	_seatList55" +
.55+ ,
Add55, /
(55/ 0
new550 3
Seat554 8
(558 9
Guid559 =
.55= >
NewGuid55> E
(55E F
)55F G
.55G H
ToString55H P
(55P Q
)55Q R
,55R S
seat55T X
.55X Y
Price55Y ^
)55^ _
)55_ `
)55` a
;55a b
IsInitialized66 
=66 
true66  
;66  !
var77 
eventRepository77 
=77  !
GrainFactory77" .
.77. /
GetGrain77/ 7
<777 8!
IEventRepositoryGrain778 M
>77M N
(77N O
Guid77O S
.77S T
Empty77T Y
)77Y Z
;77Z [
eventRepository88 
.88 
AddEvent88 $
(88$ %
this88% )
.88) *
GetPrimaryKey88* 7
(887 8
)888 9
)889 :
;88: ;
return:: 
Task:: 
.:: 

FromResult:: "
(::" #
this::# '
.::' (
GetPrimaryKey::( 5
(::5 6
)::6 7
)::7 8
;::8 9
};; 	
public== 
Task== 
<== 
EventDetails==  
>==  !
GetEventInfo==" .
(==. /
)==/ 0
{>> 	
_logger?? 
.?? 
LogInformation?? "
(??" #
$"??# %
$str??% <
{??< =
this??= A
.??A B
GetPrimaryKeyString??B U
(??U V
)??V W
}??W X
"??X Y
)??Y Z
;??Z [
if@@ 
(@@ 
!@@ 
IsInitialized@@ 
)@@ 
{AA 
throwBB 
newBB &
EventDoesNotExistExceptionBB 4
(BB4 5
)BB5 6
;BB6 7
}CC 
varEE 
availableSeatsEE 
=EE  
	_seatListEE! *
.EE* +
WhereEE+ 0
(EE0 1
seatEE1 5
=>EE6 8
!EE9 : 
_seatIdToReservationEE: N
.EEN O
ContainsKeyEEO Z
(EEZ [
seatEE[ _
.EE_ `
IdEE` b
)EEb c
)EEc d
.EEd e
ToListEEe k
(EEk l
)EEl m
;EEm n
returnFF 
TaskFF 
.FF 

FromResultFF "
(FF" #
newFF# &
EventDetailsFF' 3
(FF3 4
NameFF4 8
,FF8 9
DurationFF: B
,FFB C
LocationFFD L
,FFL M
DateFFN R
,FFR S
StatusFFT Z
,FFZ [
	_seatListFF\ e
.FFe f
CountFFf k
,FFk l
availableSeatsFFm {
.FF{ |
Count	FF| Å
,
FFÅ Ç
availableSeats
FFÉ ë
)
FFë í
)
FFí ì
;
FFì î
}GG 	
publicII 
asyncII 
TaskII 
<II 
MinimalEventDataII *
>II* +
GetMinimalInfoII, :
(II: ;
)II; <
{JJ 	
_loggerKK 
.KK 
LogInformationKK "
(KK" #
$"KK# %
$strKK% D
{KKD E
thisKKE I
.KKI J
GetPrimaryKeyStringKKJ ]
(KK] ^
)KK^ _
}KK_ `
"KK` a
)KKa b
;KKb c
ifLL 
(LL 
!LL 
IsInitializedLL 
)LL 
{MM 
throwNN 
newNN &
EventDoesNotExistExceptionNN 4
(NN4 5
)NN5 6
;NN6 7
}OO 
RandomQQ 
rndQQ 
=QQ 
newQQ 
RandomQQ #
(QQ# $
)QQ$ %
;QQ% &
ifRR 
(RR 
rndRR 
.RR 

NextDoubleRR 
(RR 
)RR  
<RR! "&
FetchSimulationProbabilityRR# =
)RR= >
{SS 
awaitTT 
TaskTT 
.TT 
DelayTT  
(TT  !"
FetchSimulationDelayMsTT! 7
)TT7 8
;TT8 9
}UU 
returnWW 
newWW 
MinimalEventDataWW '
(WW' (
thisWW( ,
.WW, -
GetPrimaryKeyStringWW- @
(WW@ A
)WWA B
,WWB C
NameWWD H
)WWH I
;WWI J
}XX 	
publicZZ 
asyncZZ 
TaskZZ 
<ZZ 
FullEventDetailsZZ *
>ZZ* +
GetFullEventInfoZZ, <
(ZZ< =
stringZZ= C
currencyZZD L
)ZZL M
{[[ 	
_logger\\ 
.\\ 
LogInformation\\ "
(\\" #
$"\\# %
$str\\% A
{\\A B
this\\B F
.\\F G
GetPrimaryKeyString\\G Z
(\\Z [
)\\[ \
}\\\ ]
"\\] ^
)\\^ _
;\\_ `
if]] 
(]] 
!]] 
IsInitialized]] 
)]] 
{^^ 
throw__ 
new__ &
EventDoesNotExistException__ 4
(__4 5
)__5 6
;__6 7
}`` 
varaa 
availableSeatsaa 
=aa  
	_seatListaa! *
.aa* +
Whereaa+ 0
(aa0 1
seataa1 5
=>aa6 8
!aa9 : 
_seatIdToReservationaa: N
.aaN O
ContainsKeyaaO Z
(aaZ [
seataa[ _
.aa_ `
Idaa` b
)aab c
)aac d
.aad e
ToListaae k
(aak l
)aal m
;aam n
varcc 
cheapestSeatcc 
=cc 
availableSeatscc -
.cc- .
Countcc. 3
>cc4 5
$numcc6 7
?cc8 9
availableSeatscc: H
.ccH I
MinccI L
(ccL M
seatccM Q
=>ccR T
seatccU Y
.ccY Z
PriceccZ _
)cc_ `
:cca b
$numccc d
;ccd e
vardd 
exchangeGraindd 
=dd 
GrainFactorydd  ,
.dd, -
GetGraindd- 5
<dd5 6"
IExchangeCurrencyGraindd6 L
>ddL M
(ddM N
GuidddN R
.ddR S
EmptyddS X
)ddX Y
;ddY Z
cheapestSeatee 
=ee 
awaitee  
exchangeGrainee! .
.ee. /
Exchangeee/ 7
(ee7 8
cheapestSeatee8 D
,eeD E
currencyeeF N
)eeN O
;eeO P
returnff 
newff 
FullEventDetailsff '
(ff' (
Nameff( ,
,ff, -
Durationff. 6
,ff6 7
Locationff8 @
,ff@ A
DateffB F
,ffF G
StatusffH N
,ffN O
	_seatListffP Y
.ffY Z
CountffZ _
,ff_ `
availableSeatsffa o
.ffo p
Countffp u
,ffu v
availableSeats	ffw Ö
,
ffÖ Ü
cheapestSeat
ffá ì
)
ffì î
;
ffî ï
}gg 	
publicii 
Taskii 
<ii 
FullEventDetailsii $
>ii$ %
UpdateEventInfoii& 5
(ii5 6
stringii6 <
nameii= A
,iiA B
doubleiiC I
durationiiJ R
,iiR S
stringiiT Z
locationii[ c
,iic d
DateTimeiie m
dateiin r
)iir s
{jj 	
_loggerkk 
.kk 
LogInformationkk "
(kk" #
$"kk# %
$strkk% =
{kk= >
thiskk> B
.kkB C
GetPrimaryKeyStringkkC V
(kkV W
)kkW X
}kkX Y
"kkY Z
)kkZ [
;kk[ \
ifll 
(ll 
!ll 
IsInitializedll 
)ll 
{mm 
thrownn 
newnn &
EventDoesNotExistExceptionnn 4
(nn4 5
)nn5 6
;nn6 7
}oo 
Nameqq 
=qq 
nameqq 
;qq 
Durationrr 
=rr 
durationrr 
;rr  
Locationss 
=ss 
locationss 
;ss  
Datett 
=tt 
datett 
;tt 
varuu 
availableSeatsuu 
=uu  
	_seatListuu! *
.uu* +
Whereuu+ 0
(uu0 1
seatuu1 5
=>uu6 8
!uu9 : 
_seatIdToReservationuu: N
.uuN O
ContainsKeyuuO Z
(uuZ [
seatuu[ _
.uu_ `
Iduu` b
)uub c
)uuc d
.uud e
ToListuue k
(uuk l
)uul m
;uum n
varvv 
cheapestSeatvv 
=vv 
availableSeatsvv -
.vv- .
Minvv. 1
(vv1 2
seatvv2 6
=>vv7 9
seatvv: >
.vv> ?
Pricevv? D
)vvD E
;vvE F
foreachww 
(ww 
varww 
itemww 
inww   
_seatIdToReservationww! 5
)ww5 6
{xx 
itemyy 
.yy 
Valueyy 
.yy 
EventChangeActionyy ,
(yy, -
)yy- .
;yy. /
}zz 
return{{ 
Task{{ 
.{{ 

FromResult{{ "
({{" #
new{{# &
FullEventDetails{{' 7
({{7 8
Name{{8 <
,{{< =
Duration{{> F
,{{F G
Location{{H P
,{{P Q
Date{{R V
,{{V W
Status{{X ^
,{{^ _
	_seatList{{` i
.{{i j
Count{{j o
,{{o p
availableSeats{{q 
.	{{ Ä
Count
{{Ä Ö
,
{{Ö Ü
availableSeats
{{á ï
,
{{ï ñ
cheapestSeat
{{ó £
)
{{£ §
)
{{§ •
;
{{• ¶
}|| 	
public~~ 
Task~~ 
CancelEvent~~ 
(~~  
)~~  !
{ 	
_logger
ÄÄ 
.
ÄÄ 
LogInformation
ÄÄ "
(
ÄÄ" #
$"
ÄÄ# %
$str
ÄÄ% :
{
ÄÄ: ;
this
ÄÄ; ?
.
ÄÄ? @!
GetPrimaryKeyString
ÄÄ@ S
(
ÄÄS T
)
ÄÄT U
}
ÄÄU V
"
ÄÄV W
)
ÄÄW X
;
ÄÄX Y
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
IsInitialized
ÅÅ 
)
ÅÅ 
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ (
EventDoesNotExistException
ÉÉ 4
(
ÉÉ4 5
)
ÉÉ5 6
;
ÉÉ6 7
}
ÑÑ 
this
ÜÜ 
.
ÜÜ 
Status
ÜÜ 
=
ÜÜ 
EventStates
ÜÜ %
.
ÜÜ% &
CANCELED
ÜÜ& .
;
ÜÜ. /
foreach
áá 
(
áá 
var
áá 
item
áá 
in
áá  "
_seatIdToReservation
áá! 5
)
áá5 6
{
àà 
item
ââ 
.
ââ 
Value
ââ 
.
ââ "
EventCancelledAction
ââ /
(
ââ/ 0
)
ââ0 1
;
ââ1 2
}
ää "
_seatIdToReservation
ãã  
.
ãã  !
Clear
ãã! &
(
ãã& '
)
ãã' (
;
ãã( )
return
åå 
Task
åå 
.
åå 
CompletedTask
åå %
;
åå% &
}
çç 	
public
èè 
Task
èè 
<
èè 
bool
èè 
>
èè 
CreateReservation
èè +
(
èè+ ,
string
èè, 2
seatId
èè3 9
)
èè9 :
{
êê 	
_logger
ëë 
.
ëë 
LogInformation
ëë "
(
ëë" #
$"
ëë# %
$str
ëë% C
{
ëëC D
seatId
ëëD J
}
ëëJ K
$str
ëëK V
{
ëëV W
this
ëëW [
.
ëë[ \!
GetPrimaryKeyString
ëë\ o
(
ëëo p
)
ëëp q
}
ëëq r
"
ëër s
)
ëës t
;
ëët u
if
íí 
(
íí 
!
íí 
IsInitialized
íí 
)
íí 
{
ìì 
throw
îî 
new
îî (
EventDoesNotExistException
îî 4
(
îî4 5
)
îî5 6
;
îî6 7
}
ïï 
if
óó 
(
óó 
	_seatList
óó 
.
óó 
Find
óó 
(
óó 
seat
óó #
=>
óó$ &
seat
óó' +
.
óó+ ,
Id
óó, .
.
óó. /
Equals
óó/ 5
(
óó5 6
seatId
óó6 <
)
óó< =
)
óó= >
==
óó? A
null
óóB F
)
óóF G
{
òò 
throw
ôô 
new
ôô '
SeatDoesNotExistException
ôô 3
(
ôô3 4
)
ôô4 5
;
ôô5 6
}
öö 
if
úú 
(
úú "
_seatIdToReservation
úú $
.
úú$ %
ContainsKey
úú% 0
(
úú0 1
seatId
úú1 7
)
úú7 8
)
úú8 9
{
ùù 
return
ûû 
Task
ûû 
.
ûû 

FromResult
ûû &
(
ûû& '
false
ûû' ,
)
ûû, -
;
ûû- .
}
üü 
var
°° 
reservationId
°° 
=
°° 
RequestContext
°°  .
.
°°. /
Get
°°/ 2
(
°°2 3
$str
°°3 B
)
°°B C
as
°°D F
Guid
°°G K
?
°°K L
;
°°L M
if
¢¢ 
(
¢¢ 
!
¢¢ 
reservationId
¢¢ 
.
¢¢ 
HasValue
¢¢ '
)
¢¢' (
{
££ 
throw
§§ 
new
§§ "
InvalidCastException
§§ .
(
§§. /
)
§§/ 0
;
§§0 1
}
•• 
var
ßß 
reservationGrain
ßß  
=
ßß! "
GrainFactory
ßß# /
.
ßß/ 0
GetGrain
ßß0 8
<
ßß8 9
IReservationGrain
ßß9 J
>
ßßJ K
(
ßßK L
reservationId
ßßL Y
.
ßßY Z
Value
ßßZ _
)
ßß_ `
;
ßß` a"
_seatIdToReservation
®®  
.
®®  !
Add
®®! $
(
®®$ %
seatId
®®% +
,
®®+ ,
reservationGrain
®®- =
)
®®= >
;
®®> ?
return
©© 
Task
©© 
.
©© 

FromResult
©© "
(
©©" #
true
©©# '
)
©©' (
;
©©( )
}
™™ 	
public
¨¨ 
Task
¨¨ 
CancelReservation
¨¨ %
(
¨¨% &
string
¨¨& ,
seatId
¨¨- 3
)
¨¨3 4
{
≠≠ 	
_logger
ÆÆ 
.
ÆÆ 
LogInformation
ÆÆ "
(
ÆÆ" #
$"
ÆÆ# %
$str
ÆÆ% E
{
ÆÆE F
seatId
ÆÆF L
}
ÆÆL M
$str
ÆÆM X
{
ÆÆX Y
this
ÆÆY ]
.
ÆÆ] ^!
GetPrimaryKeyString
ÆÆ^ q
(
ÆÆq r
)
ÆÆr s
}
ÆÆs t
"
ÆÆt u
)
ÆÆu v
;
ÆÆv w
if
ØØ 
(
ØØ 
!
ØØ 
IsInitialized
ØØ 
)
ØØ 
{
∞∞ 
throw
±± 
new
±± (
EventDoesNotExistException
±± 4
(
±±4 5
)
±±5 6
;
±±6 7
}
≤≤ 
if
¥¥ 
(
¥¥ "
_seatIdToReservation
¥¥ $
.
¥¥$ %
ContainsKey
¥¥% 0
(
¥¥0 1
seatId
¥¥1 7
)
¥¥7 8
)
¥¥8 9
{
µµ "
_seatIdToReservation
∂∂ $
.
∂∂$ %
Remove
∂∂% +
(
∂∂+ ,
seatId
∂∂, 2
)
∂∂2 3
;
∂∂3 4
}
∑∑ 
return
ππ 
Task
ππ 
.
ππ 
CompletedTask
ππ %
;
ππ% &
}
∫∫ 	
}
ªª 
[
ºº  
GenerateSerializer
ºº 
,
ºº 
Alias
ºº 
(
ºº 
nameof
ºº %
(
ºº% &
Seat
ºº& *
)
ºº* +
)
ºº+ ,
]
ºº, -
public
ΩΩ 

class
ΩΩ 
Seat
ΩΩ 
{
ææ 
public
øø 
Seat
øø 
(
øø 
string
øø 
id
øø 
,
øø 
double
øø %
price
øø& +
)
øø+ ,
{
¿¿ 	
Id
¡¡ 
=
¡¡ 
id
¡¡ 
;
¡¡ 
Price
¬¬ 
=
¬¬ 
price
¬¬ 
;
¬¬ 
}
√√ 	
[
≈≈ 	
Id
≈≈	 
(
≈≈ 
$num
≈≈ 
)
≈≈ 
]
≈≈ 
public
∆∆ 
string
∆∆ 
Id
∆∆ 
{
∆∆ 
get
∆∆ 
;
∆∆ 
set
∆∆  #
;
∆∆# $
}
∆∆% &
[
«« 	
Id
««	 
(
«« 
$num
«« 
)
«« 
]
«« 
public
»» 
double
»» 
Price
»» 
{
»» 
get
»» !
;
»»! "
set
»»# &
;
»»& '
}
»»( )
}
…… 
[
    
GenerateSerializer
   
,
   
Alias
   
(
   
nameof
   %
(
  % &
CreateSeatData
  & 4
)
  4 5
)
  5 6
]
  6 7
public
ÀÀ 

class
ÀÀ 
CreateSeatData
ÀÀ 
{
ÃÃ 
public
ÕÕ 
CreateSeatData
ÕÕ 
(
ÕÕ 
double
ÕÕ $
price
ÕÕ% *
)
ÕÕ* +
{
ŒŒ 	
Price
œœ 
=
œœ 
price
œœ 
;
œœ 
}
–– 	
[
““ 	
Id
““	 
(
““ 
$num
““ 
)
““ 
]
““ 
public
”” 
double
”” 
Price
”” 
{
”” 
get
”” !
;
””! "
set
””# &
;
””& '
}
””( )
}
‘‘ 
[
’’  
GenerateSerializer
’’ 
,
’’ 
Alias
’’ 
(
’’ 
nameof
’’ %
(
’’% &
MinimalEventData
’’& 6
)
’’6 7
)
’’7 8
]
’’8 9
public
÷÷ 

class
÷÷ 
MinimalEventData
÷÷ !
{
◊◊ 
public
ÿÿ 
MinimalEventData
ÿÿ 
(
ÿÿ  
string
ÿÿ  &
id
ÿÿ' )
,
ÿÿ) *
string
ÿÿ+ 1
name
ÿÿ2 6
)
ÿÿ6 7
{
ŸŸ 	
Id
⁄⁄ 
=
⁄⁄ 
id
⁄⁄ 
;
⁄⁄ 
Name
€€ 
=
€€ 
name
€€ 
;
€€ 
}
‹‹ 	
[
ﬁﬁ 	
Id
ﬁﬁ	 
(
ﬁﬁ 
$num
ﬁﬁ 
)
ﬁﬁ 
]
ﬁﬁ 
public
ﬂﬂ 
string
ﬂﬂ 
Id
ﬂﬂ 
{
ﬂﬂ 
get
ﬂﬂ 
;
ﬂﬂ 
}
ﬂﬂ  !
[
‡‡ 	
Id
‡‡	 
(
‡‡ 
$num
‡‡ 
)
‡‡ 
]
‡‡ 
public
·· 
string
·· 
Name
·· 
{
·· 
get
··  
;
··  !
}
··" #
}
‚‚ 
[
„„  
GenerateSerializer
„„ 
,
„„ 
Alias
„„ 
(
„„ 
nameof
„„ %
(
„„% &
EventDetails
„„& 2
)
„„2 3
)
„„3 4
]
„„4 5
public
‰‰ 

class
‰‰ 
EventDetails
‰‰ 
{
ÂÂ 
public
ÊÊ 
EventDetails
ÊÊ 
(
ÊÊ 
string
ÊÊ "
name
ÊÊ# '
,
ÊÊ' (
double
ÊÊ) /
duration
ÊÊ0 8
,
ÊÊ8 9
string
ÊÊ: @
location
ÊÊA I
,
ÊÊI J
DateTime
ÊÊK S
date
ÊÊT X
,
ÊÊX Y
string
ÊÊZ `
status
ÊÊa g
,
ÊÊg h
int
ÊÊi l
seatsAmount
ÊÊm x
,
ÊÊx y
int
ÊÊz }#
availableSeatsAmountÊÊ~ í
,ÊÊí ì
ListÊÊî ò
<ÊÊò ô
SeatÊÊô ù
>ÊÊù û
availableSeatsÊÊü ≠
)ÊÊ≠ Æ
{
ÁÁ 	
Name
ËË 
=
ËË 
name
ËË 
;
ËË 
Duration
ÈÈ 
=
ÈÈ 
duration
ÈÈ 
;
ÈÈ  
Location
ÍÍ 
=
ÍÍ 
location
ÍÍ 
;
ÍÍ  
Date
ÎÎ 
=
ÎÎ 
date
ÎÎ 
;
ÎÎ 
Status
ÏÏ 
=
ÏÏ 
status
ÏÏ 
;
ÏÏ 
SeatsAmount
ÌÌ 
=
ÌÌ 
seatsAmount
ÌÌ %
;
ÌÌ% &"
AvailableSeatsAmount
ÓÓ  
=
ÓÓ! ""
availableSeatsAmount
ÓÓ# 7
;
ÓÓ7 8
AvailableSeats
ÔÔ 
=
ÔÔ 
availableSeats
ÔÔ +
;
ÔÔ+ ,
}
 	
[
ÚÚ 	
Id
ÚÚ	 
(
ÚÚ 
$num
ÚÚ 
)
ÚÚ 
]
ÚÚ 
public
ÛÛ 
string
ÛÛ 
Name
ÛÛ 
{
ÛÛ 
get
ÛÛ  
;
ÛÛ  !
}
ÛÛ" #
[
ÙÙ 	
Id
ÙÙ	 
(
ÙÙ 
$num
ÙÙ 
)
ÙÙ 
]
ÙÙ 
public
ıı 
double
ıı 
Duration
ıı 
{
ıı  
get
ıı! $
;
ıı$ %
}
ıı& '
[
ˆˆ 	
Id
ˆˆ	 
(
ˆˆ 
$num
ˆˆ 
)
ˆˆ 
]
ˆˆ 
public
˜˜ 
string
˜˜ 
Location
˜˜ 
{
˜˜  
get
˜˜! $
;
˜˜$ %
}
˜˜& '
[
¯¯ 	
Id
¯¯	 
(
¯¯ 
$num
¯¯ 
)
¯¯ 
]
¯¯ 
public
˘˘ 
DateTime
˘˘ 
Date
˘˘ 
{
˘˘ 
get
˘˘ "
;
˘˘" #
}
˘˘# $
[
˙˙ 	
Id
˙˙	 
(
˙˙ 
$num
˙˙ 
)
˙˙ 
]
˙˙ 
public
˚˚ 
string
˚˚ 
Status
˚˚ 
{
˚˚ 
get
˚˚ "
;
˚˚" #
}
˚˚$ %
[
¸¸ 	
Id
¸¸	 
(
¸¸ 
$num
¸¸ 
)
¸¸ 
]
¸¸ 
public
˝˝ 
int
˝˝ 
SeatsAmount
˝˝ 
{
˝˝  
get
˝˝! $
;
˝˝$ %
}
˝˝& '
[
˛˛ 	
Id
˛˛	 
(
˛˛ 
$num
˛˛ 
)
˛˛ 
]
˛˛ 
public
ˇˇ 
int
ˇˇ "
AvailableSeatsAmount
ˇˇ '
{
ˇˇ( )
get
ˇˇ* -
;
ˇˇ- .
}
ˇˇ/ 0
[
ÄÄ 	
Id
ÄÄ	 
(
ÄÄ 
$num
ÄÄ 
)
ÄÄ 
]
ÄÄ 
public
ÅÅ 
List
ÅÅ 
<
ÅÅ 
Seat
ÅÅ 
>
ÅÅ 
AvailableSeats
ÅÅ (
{
ÅÅ) *
get
ÅÅ+ .
;
ÅÅ. /
}
ÅÅ0 1
}
ÇÇ 
[
ÉÉ  
GenerateSerializer
ÉÉ 
,
ÉÉ 
Alias
ÉÉ 
(
ÉÉ 
nameof
ÉÉ %
(
ÉÉ% &
FullEventDetails
ÉÉ& 6
)
ÉÉ6 7
)
ÉÉ7 8
]
ÉÉ8 9
public
ÑÑ 

class
ÑÑ 
FullEventDetails
ÑÑ !
:
ÑÑ" #
EventDetails
ÑÑ$ 0
{
ÖÖ 
public
ÜÜ 
FullEventDetails
ÜÜ 
(
ÜÜ  
string
ÜÜ  &
name
ÜÜ' +
,
ÜÜ+ ,
double
ÜÜ- 3
duration
ÜÜ4 <
,
ÜÜ< =
string
ÜÜ> D
location
ÜÜE M
,
ÜÜM N
DateTime
ÜÜO W
date
ÜÜX \
,
ÜÜ\ ]
string
ÜÜ^ d
status
ÜÜe k
,
ÜÜk l
int
ÜÜm p
seatsAmount
ÜÜq |
,
ÜÜ| }
intÜÜ~ Å$
availableSeatsAmountÜÜÇ ñ
,ÜÜñ ó
ListÜÜò ú
<ÜÜú ù
SeatÜÜù °
>ÜÜ° ¢
availableSeatsÜÜ£ ±
,ÜÜ± ≤
doubleÜÜ≥ π
cheapestSeatÜÜ∫ ∆
)ÜÜ∆ «
:ÜÜ« »
baseÜÜ… Õ
(ÜÜÕ Œ
nameÜÜŒ “
,ÜÜ“ ”
durationÜÜ‘ ‹
,ÜÜ‹ ›
locationÜÜﬁ Ê
,ÜÜÊ Á
dateÜÜË Ï
,ÜÜÏ Ì
statusÜÜÓ Ù
,ÜÜÙ ı
seatsAmountÜÜˆ Å
,ÜÜÅ Ç$
availableSeatsAmountÜÜÉ ó
,ÜÜó ò
availableSeatsÜÜô ß
)ÜÜß ®
{
áá 	
CheapestSeat
àà 
=
àà 
cheapestSeat
àà '
;
àà' (
}
ââ 	
[
ãã 	
Id
ãã	 
(
ãã 
$num
ãã 
)
ãã 
]
ãã 
public
åå 
double
åå 
CheapestSeat
åå "
{
åå# $
get
åå% (
;
åå( )
}
åå* +
}
çç 
public
éé 

static
éé 
class
éé 
EventStates
éé #
{
èè 
public
êê 
static
êê 
readonly
êê 
string
êê %
ACTIVE
êê& ,
=
êê- .
$str
êê/ 7
;
êê7 8
public
ëë 
static
ëë 
readonly
ëë 
string
ëë %
CANCELED
ëë& .
=
ëë/ 0
$str
ëë1 ;
;
ëë; <
}
íí 
}ìì “6
_C:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Actors\EventQuery.cs
	namespace 	
OrleansTicket
 
. 
Actors 
{ 
public 

	interface 
IEventQueryGrain %
:& '
IGrainWithGuidKey( 9
{ 
Task 
< 
List 
< 
MinimalEventData "
>" #
># $
GetAllEvents% 1
(1 2
string2 8
name9 =
)= >
;> ?
}		 
public 

class 

EventQuery 
: 
Grain #
,# $
IEventQueryGrain% 5
{ 
ILogger 
< 

EventQuery 
> 
_logger #
;# $
public 

EventQuery 
( 
ILogger !
<! "

EventQuery" ,
>, -
logger. 4
)4 5
{ 	
_logger 
= 
logger 
; 
} 	
private 
static 
double 1
%ExternalCallSimulationFailProbability C
=D E
$numF J
;J K
private 
static 
int 

MaxRetries %
=& '
$num( )
;) *
public 
async 
Task 
< 
List 
< 
MinimalEventData /
>/ 0
>0 1
GetAllEvents2 >
(> ?
string? E
nameF J
)J K
{ 	
_logger 
. 
LogInformation "
(" #
$"# %
$str% K
{K L
nameL P
}P Q
"Q R
)R S
;S T
int 
retries 
= 
$num 
; 
while 
( 
retries 
< 

MaxRetries '
)' (
{ 
try 
{ 
return 
await  
this! %
.% &
	GetEvents& /
(/ 0
name0 4
)4 5
;5 6
}   
catch!! 
(!! !
NoConnectionException!! ,
)!!, -
{"" 
_logger## 
.## 
LogInformation## *
(##* +
$str##+ L
)##L M
;##M N
retries$$ 
++$$ 
;$$ 
}%% 
}&& 
throw(( 
new(( 
System(( 
.(( 
	Exception(( &
(((& '
$str((' B
)((B C
;((C D
}** 	
private++ 
async++ 
Task++ 
<++ 
List++ 
<++  
MinimalEventData++  0
>++0 1
>++1 2
	GetEvents++3 <
(++< =
string++= C
name++D H
)++H I
{,, 	
_logger-- 
.-- 
LogInformation-- "
(--" #
$str--# >
)--> ?
;--? @
Random.. 
rnd.. 
=.. 
new.. 
Random.. #
(..# $
)..$ %
;..% &
if// 
(// 
rnd// 
.// 

NextDouble// 
(// 
)//  
<//! "1
%ExternalCallSimulationFailProbability//# H
)//H I
{00 
_logger11 
.11 
LogInformation11 &
(11& '
$str11' Y
)11Y Z
;11Z [
throw22 
new22 !
NoConnectionException22 /
(22/ 0
)220 1
;221 2
}33 
name55 
=55 
name55 
==55 
null55 
?55  !
string55" (
.55( )
Empty55) .
:55/ 0
name551 5
;555 6
var66 
eventRepository66 
=66  !
GrainFactory66" .
.66. /
GetGrain66/ 7
<667 8!
IEventRepositoryGrain668 M
>66M N
(66N O
Guid66O S
.66S T
Empty66T Y
)66Y Z
;66Z [
var77 
events77 
=77 
await77 
eventRepository77 .
.77. /
	GetEvents77/ 8
(778 9
)779 :
;77: ;
var99 
cancellationTask99  
=99! "
Task99# '
.99' (
Delay99( -
(99- .
$num99. 2
)992 3
;993 4
var;; 
tasks;; 
=;; 
new;; 
List;;  
<;;  !
Task;;! %
>;;% &
(;;& '
events;;' -
.;;- .
Select;;. 4
(;;4 5
item;;5 9
=>;;: <
item;;= A
.;;A B
Value;;B G
.;;G H
GetMinimalInfo;;H V
(;;V W
);;W X
);;X Y
.;;Y Z
ToList;;Z `
(;;` a
);;a b
);;b c
;;;c d
tasks<< 
.<< 
Add<< 
(<< 
cancellationTask<< &
)<<& '
;<<' (
List>> 
<>> 
MinimalEventData>> !
>>>! "
result>># )
=>>* +
new>>, /
(>>/ 0
)>>0 1
;>>1 2
while@@ 
(@@ 
tasks@@ 
.@@ 
Count@@ 
>@@  
$num@@! "
)@@" #
{AA 
varBB 
	completedBB 
=BB 
awaitBB  %
TaskBB& *
.BB* +
WhenAnyBB+ 2
(BB2 3
tasksBB3 8
)BB8 9
;BB9 :
ifCC 
(CC 
	completedCC 
isCC  
TaskCC! %
<CC% &
MinimalEventDataCC& 6
>CC6 7
completedEventTaskCC8 J
)CCJ K
{DD 
resultEE 
.EE 
AddEE 
(EE 
completedEventTaskEE 1
.EE1 2
ResultEE2 8
)EE8 9
;EE9 :
}FF 
elseGG 
{HH 
breakJJ 
;JJ 
}KK 
tasksLL 
.LL 
RemoveLL 
(LL 
	completedLL &
)LL& '
;LL' (
}MM 
returnOO 
resultOO 
.OO 
WhereOO 
(OO  
xOO  !
=>OO" $
xOO% &
.OO& '
NameOO' +
!=OO, .
nullOO/ 3
&&OO4 6
xOO7 8
.OO8 9
NameOO9 =
.OO= >
ToLowerOO> E
(OOE F
)OOF G
.OOG H

StartsWithOOH R
(OOR S
nameOOS W
.OOW X
ToLowerOOX _
(OO_ `
)OO` a
)OOa b
)OOb c
.OOc d
ToListOOd j
(OOj k
)OOk l
;OOl m
}PP 	
}QQ 
}RR ú
dC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Actors\EventRepository.cs
	namespace 	
OrleansTicket
 
. 
Actors 
{ 
public 

	interface !
IEventRepositoryGrain *
:+ ,
IGrainWithGuidKey- >
{ 
Task 
AddEvent 
( 
Guid 
eventId "
)" #
;# $
Task 
< 

Dictionary 
< 
Guid 
, 
IEventGrain )
>) *
>* +
	GetEvents, 5
(5 6
)6 7
;7 8
}		 
public 

sealed 
class 
EventRepository '
:( )
Grain* /
,/ 0!
IEventRepositoryGrain1 F
{ 
ILogger 
< 
EventRepository 
>  
_logger! (
;( )
public 
EventRepository 
( 
ILogger &
<& '
EventRepository' 6
>6 7
logger8 >
)> ?
{ 	
_logger 
= 
logger 
; 
} 	
private 

Dictionary 
< 
Guid 
,  !
IEventGrain" -
>- .
_events/ 6
=7 8
new9 <
(< =
)= >
;> ?
public 
Task 
AddEvent 
( 
Guid !
eventId" )
)) *
{ 	
_logger 
. 
LogInformation "
(" #
$"# %
$str% 2
{2 3
eventId3 :
}: ;
"; <
)< =
;= >
_events 
[ 
eventId 
] 
= 
GrainFactory +
.+ ,
GetGrain, 4
<4 5
IEventGrain5 @
>@ A
(A B
eventIdB I
)I J
;J K
return 
Task 
. 
CompletedTask %
;% &
} 	
public 
Task 
< 

Dictionary 
< 
Guid #
,# $
IEventGrain% 0
>0 1
>1 2
	GetEvents3 <
(< =
)= >
{ 	
_logger 
. 
LogInformation "
(" #
$"# %
$str% 7
"7 8
)8 9
;9 :
return 
Task 
. 

FromResult "
(" #
_events# *
)* +
;+ ,
} 	
}   
}!! £
eC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Actors\ExchangeCurrency.cs
	namespace 	
OrleansTicket
 
. 
Actors 
{ 
public 

	interface "
IExchangeCurrencyGrain +
:, -
IGrainWithGuidKey. ?
{ 
Task 
< 
double 
> 
Exchange 
( 
double $
amount% +
,+ ,
string- 3
fromCurrency4 @
)@ A
;A B
} 
[ 
StatelessWorker 
( 
maxLocalWorkers $
:$ %
$num& '
)' (
]( )
public 

class 
ExchangeCurrency !
:" #
Grain$ )
,) *"
IExchangeCurrencyGrain+ A
{ 
ILogger 
< 
ExchangeCurrency  
>  !
_logger" )
;) *
public 
ExchangeCurrency 
(  
ILogger  '
<' (
ExchangeCurrency( 8
>8 9
logger: @
)@ A
{ 	
_logger 
= 
logger 
; 
} 	
private 
static 
bool 
ShouldDelay '
=( )
true* .
;. /
private 
double 
CurrencyRate #
(# $
string$ *
currency+ 3
)3 4
{ 	
_logger 
. 
LogInformation "
(" #
$"# %
$str% 4
{4 5
currency5 =
}= >
"> ?
)? @
;@ A
switch 
( 
currency 
) 
{ 
case 
$str 
: 
return 
$num 
; 
case 
$str 
: 
return 
$num 
;  
case   
$str   
:   
return!! 
$num!! 
;!!  
default"" 
:"" 
throw## 
new## 
ArgumentException## /
(##/ 0
)##0 1
;##1 2
}$$ 
}%% 	
public&& 
async&& 
Task&& 
<&& 
double&&  
>&&  !
Exchange&&" *
(&&* +
double&&+ 1
amount&&2 8
,&&8 9
string&&: @
fromCurrency&&A M
)&&M N
{'' 	
_logger(( 
.(( 
LogInformation(( "
(((" #
$"((# %
$str((% 0
{((0 1
amount((1 7
}((7 8
$str((8 =
{((= >
fromCurrency((> J
}((J K
"((K L
)((L M
;((M N
if)) 
()) 
ShouldDelay)) 
))) 
{** 
Console++ 
.++ 
	WriteLine++ !
(++! "
$str++" ?
)++? @
;++@ A
await,, 
Task,, 
.,, 
Delay,,  
(,,  !
$num,,! %
),,% &
;,,& '
}-- 
return.. 
amount.. 
*.. 
CurrencyRate.. (
(..( )
fromCurrency..) 5
)..5 6
;..6 7
}// 	
}00 
}11 è]
`C:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Actors\Reservation.cs
	namespace 	
OrleansTicket
 
. 
Actors 
{ 
public 

	interface 
IReservationGrain &
:' (
IGrainWithGuidKey) :
{ 
Task		 
<		 
Guid		 
>		 
ReserveSeat		 
(		 
string		 %
eventId		& -
,		- .
string		/ 5
seatId		6 <
,		< =
string		> D
email		E J
)		J K
;		K L
Task

 
<

 
ReservationDetails

 
>

  
GetReservationInfo

! 3
(

3 4
)

4 5
;

5 6
Task 
CancelReservation 
( 
)  
;  !
Task 
EventChangeAction 
( 
)  
;  !
Task  
EventCancelledAction !
(! "
)" #
;# $
} 
public 

sealed 
class 
ReservationGrain (
:( )
Grain* /
,/ 0
IReservationGrain1 B
{ 
private 
ILogger 
< 
ReservationGrain (
>( )
_logger* 1
;1 2
public 
ReservationGrain 
(  
ILogger  '
<' (
ReservationGrain( 8
>8 9
logger: @
)@ A
{ 	
_logger 
= 
logger 
; 
} 	
private 
string 
Status 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
ReservationStates. ?
.? @
CREATED@ G
;G H
private 
IEventGrain 
Event !
{" #
get$ '
;' (
set) ,
;, -
}. /
private 
string 
SeatId 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
$str. 0
;0 1
private 

IUserGrain 
User 
{  
get! $
;$ %
set& )
;) *
}+ ,
private 
bool 
IsInitialized "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
false3 8
;8 9
public 
async 
Task 
< 
Guid 
> 
ReserveSeat  +
(+ ,
string, 2
eventId3 :
,: ;
string< B
seatIdC I
,I J
stringK Q
emailR W
)W X
{   	
_logger!! 
.!! 
LogInformation!! "
(!!" #
$"!!# %
$str!!% 4
{!!4 5
seatId!!5 ;
}!!; <
$str!!< G
{!!G H
eventId!!H O
}!!O P
$str!!P Z
{!!Z [
email!![ `
}!!` a
"!!a b
)!!b c
;!!c d
if"" 
("" 
!"" 
Status"" 
."" 
Equals"" 
("" 
ReservationStates"" 0
.""0 1
CREATED""1 8
)""8 9
)""9 :
{## 
throw$$ 
new$$ &
ReservationExistsException$$ 4
($$4 5
)$$5 6
;$$6 7
}%% 
User'' 
='' 
GrainFactory'' 
.''  
GetGrain''  (
<''( )

IUserGrain'') 3
>''3 4
(''4 5
email''5 :
)'': ;
;''; <
if(( 
((( 
!(( 
await(( 
User(( 
.(( 
IsInitialized(( )
((() *
)((* +
)((+ ,
{)) 
Status** 
=** 
ReservationStates** *
.*** +
DECLINED**+ 3
;**3 4
throw++ 
new++ %
UserDoesNotExistException++ 3
(++3 4
)++4 5
;++5 6
},, 
Event.. 
=.. 
GrainFactory..  
...  !
GetGrain..! )
<..) *
IEventGrain..* 5
>..5 6
(..6 7
Guid..7 ;
...; <
Parse..< A
(..A B
eventId..B I
)..I J
)..J K
;..K L
RequestContext// 
.// 
Set// 
(// 
$str// .
,//. /
this//0 4
.//4 5
GetPrimaryKey//5 B
(//B C
)//C D
)//D E
;//E F
var00 
success00 
=00 
await00 
Event00  %
.00% &
CreateReservation00& 7
(007 8
seatId008 >
)00> ?
;00? @
if11 
(11 
!11 
success11 
)11 
{22 
Status33 
=33 
ReservationStates33 *
.33* +
DECLINED33+ 3
;333 4
throw44 
new44 (
ReservationDeclinedException44 6
(446 7
)447 8
;448 9
}55 
Status77 
=77 
ReservationStates77 &
.77& '
ACTIVE77' -
;77- .
SeatId88 
=88 
seatId88 
;88 
IsInitialized99 
=99 
true99  
;99  !
await:: 
User:: 
.:: 
AddReservation:: %
(::% &
this::& *
.::* +
GetPrimaryKeyString::+ >
(::> ?
)::? @
)::@ A
;::A B
return;; 
this;; 
.;; 
GetPrimaryKey;; %
(;;% &
);;& '
;;;' (
}<< 	
public>> 
Task>> 
<>> 
ReservationDetails>> &
>>>& '
GetReservationInfo>>( :
(>>: ;
)>>; <
{?? 	
_logger@@ 
.@@ 
LogInformation@@ "
(@@" #
$"@@# %
$str@@% B
{@@B C
this@@C G
.@@G H
GetPrimaryKeyString@@H [
(@@[ \
)@@\ ]
}@@] ^
"@@^ _
)@@_ `
;@@` a
ifAA 
(AA 
!AA 
IsInitializedAA 
)AA 
{BB 
throwCC 
newCC ,
 ReservationDoesNotExistExceptionCC :
(CC: ;
)CC; <
;CC< =
}DD 
returnEE 
TaskEE 
.EE 

FromResultEE "
(EE" #
newEE# &
ReservationDetailsEE' 9
(EE9 :
thisEE: >
.EE> ?
GetPrimaryKeyEE? L
(EEL M
)EEM N
,EEN O
StatusEEP V
,EEV W
EventEEX ]
.EE] ^
GetPrimaryKeyStringEE^ q
(EEq r
)EEr s
,EEs t
SeatIdEEu {
)EE{ |
)EE| }
;EE} ~
}FF 	
publicHH 
TaskHH 
CancelReservationHH %
(HH% &
)HH& '
{II 	
_loggerJJ 
.JJ 
LogInformationJJ "
(JJ" #
$"JJ# %
$strJJ% <
{JJ< =
thisJJ= A
.JJA B
GetPrimaryKeyStringJJB U
(JJU V
)JJV W
}JJW X
"JJX Y
)JJY Z
;JJZ [
ifKK 
(KK 
!KK 
IsInitializedKK 
)KK 
{LL 
throwMM 
newMM ,
 ReservationDoesNotExistExceptionMM :
(MM: ;
)MM; <
;MM< =
}NN 
StatusPP 
=PP 
ReservationStatesPP &
.PP& '
CANCELEDPP' /
;PP/ 0
returnQQ 
EventQQ 
.QQ 
CancelReservationQQ *
(QQ* +
SeatIdQQ+ 1
!QQ1 2
)QQ2 3
;QQ3 4
}RR 	
publicSS 
TaskSS 
EventChangeActionSS %
(SS% &
)SS& '
{TT 	
_loggerUU 
.UU 
LogInformationUU "
(UU" #
$"UU# %
$strUU% ;
{UU; <
thisUU< @
.UU@ A
GetPrimaryKeyStringUUA T
(UUT U
)UUU V
}UUV W
$str	UUW ñ
"
UUñ ó
)
UUó ò
;
UUò ô
returnVV 
TaskVV 
.VV 
CompletedTaskVV %
;VV% &
}WW 	
publicXX 
TaskXX  
EventCancelledActionXX (
(XX( )
)XX) *
{YY 	
StatusZZ 
=ZZ 
ReservationStatesZZ &
.ZZ& '
CANCELEDZZ' /
;ZZ/ 0
_logger[[ 
.[[ 
LogInformation[[ "
([[" #
$"[[# %
$str[[% 1
{[[1 2
this[[2 6
.[[6 7
GetPrimaryKeyString[[7 J
([[J K
)[[K L
}[[L M
$str	[[M £
"
[[£ §
)
[[§ •
;
[[• ¶
return\\ 
Task\\ 
.\\ 
CompletedTask\\ %
;\\% &
}]] 	
}^^ 
[__ 
GenerateSerializer__ 
,__ 
Alias__ 
(__ 
nameof__ %
(__% &
ReservationDetails__& 8
)__8 9
)__9 :
]__: ;
public`` 

class`` 
ReservationDetails`` #
{aa 
publicbb 
ReservationDetailsbb !
(bb! "
Guidbb" &
reservationIdbb' 4
,bb4 5
stringbb6 <
statusbb= C
,bbC D
stringbbE K
eventIdbbL S
,bbS T
stringbbU [
seatIdbb\ b
)bbb c
{cc 	
ReservationIddd 
=dd 
reservationIddd )
;dd) *
Statusee 
=ee 
statusee 
;ee 
EventIdff 
=ff 
eventIdff 
;ff 
SeatIdgg 
=gg 
seatIdgg 
;gg 
}hh 	
[jj 	
Idjj	 
(jj 
$numjj 
)jj 
]jj 
publickk 
Guidkk 
ReservationIdkk !
{kk" #
getkk$ '
;kk' (
}kk) *
[ll 	
Idll	 
(ll 
$numll 
)ll 
]ll 
publicmm 
stringmm 
Statusmm 
{mm 
getmm "
;mm" #
}mm$ %
[nn 	
Idnn	 
(nn 
$numnn 
)nn 
]nn 
publicoo 
stringoo 
EventIdoo 
{oo 
getoo  #
;oo# $
}oo% &
[pp 	
Idpp	 
(pp 
$numpp 
)pp 
]pp 
publicqq 
stringqq 
SeatIdqq 
{qq 
getqq "
;qq" #
}qq$ %
}rr 
publicss 

staticss 
classss 
ReservationStatesss )
{tt 
publicuu 
staticuu 
readonlyuu 
stringuu %
CREATEDuu& -
=uu. /
$struu0 9
;uu9 :
publicvv 
staticvv 
readonlyvv 
stringvv %
DECLINEDvv& .
=vv/ 0
$strvv1 ;
;vv; <
publicww 
staticww 
readonlyww 
stringww %
ACTIVEww& ,
=ww- .
$strww/ 7
;ww7 8
publicxx 
staticxx 
readonlyxx 
stringxx %
CANCELEDxx& .
=xx/ 0
$strxx1 ;
;xx; <
}yy 
}zz ÷N
YC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Actors\User.cs
	namespace 	
OrleansTicket
 
. 
Actors 
{ 
public		 

	interface		 

IUserGrain		 
:		  !
IGrainWithStringKey		" 5
{

 
Task 
< 
string 
> 
InitializeUser #
(# $
string$ *
name+ /
,/ 0
string1 7
surname8 ?
)? @
;@ A
Task 
UpdateUserInfo 
( 
string "
name# '
,' (
string) /
surname0 7
)7 8
;8 9
Task 
AddReservation 
( 
string "
reservationId# 0
)0 1
;1 2
Task 
< 
FullUserDetails 
> 
GetUserInfo )
() *
)* +
;+ ,
Task 
< 
bool 
> 
IsInitialized  
(  !
)! "
;" #
} 
public 

sealed 
class 
	UserGrain !
(! "
[ 	
PersistentState	 
( 
	stateName "
:" #
$str$ *
,* +
storageName, 7
:7 8
$str9 @
)@ A
]A B
IPersistentStateC S
<S T
UserDetailsT _
>_ `
statea f
,f g
ILoggerh o
<o p
	UserGrainp y
>y z
logger	{ Å
)
Å Ç
:
Ç É
Grain
Ñ â
,
â ä

IUserGrain
ã ï
{ 
private 
List 
< 
string 
> 
Reservations )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
=8 9
new: =
(= >
)> ?
;? @
public 
async 
Task 
< 
string  
>  !
InitializeUser" 0
(0 1
string1 7
name8 <
,< =
string> D
surnameE L
)L M
{ 	
logger 
. 
LogInformation !
(! "
$"" $
$str$ :
{: ;
this; ?
.? @
GetPrimaryKeyString@ S
(S T
)T U
}U V
"V W
)W X
;X Y
if 
( 
state 
. 
State 
. 
IsInitialized )
)) *
{ 
throw   
new   
UserExistsException   -
(  - .
)  . /
;  / 0
}!! 
state## 
.## 
State## 
=## 
new## 
(## 
)## 
{$$ 
Name%% 
=%% 
name%% 
,%% 
Surname&& 
=&& 
surname&& !
,&&! "
IsInitialized'' 
='' 
true''  $
}(( 
;(( 
await** 
state** 
.** 
WriteStateAsync** '
(**' (
)**( )
;**) *
return++ 
this++ 
.++ 
GetPrimaryKeyString++ +
(+++ ,
)++, -
;++- .
},, 	
public.. 
async.. 
Task.. 
UpdateUserInfo.. (
(..( )
string..) /
name..0 4
,..4 5
string..6 <
surname..= D
)..D E
{// 	
logger00 
.00 
LogInformation00 !
(00! "
$"00" $
$str00$ ;
{00; <
this00< @
.00@ A
GetPrimaryKeyString00A T
(00T U
)00U V
}00V W
"00W X
)00X Y
;00Y Z
if11 
(11 
!11 
state11 
.11 
State11 
.11 
IsInitialized11 *
)11* +
{22 
throw33 
new33 %
UserDoesNotExistException33 3
(333 4
)334 5
;335 6
}44 
state55 
.55 
State55 
.55 
Name55 
=55 
name55 #
;55# $
state66 
.66 
State66 
.66 
Surname66 
=66  !
surname66" )
;66) *
await88 
state88 
.88 
WriteStateAsync88 '
(88' (
)88( )
;88) *
}99 	
public;; 
async;; 
Task;; 
AddReservation;; (
(;;( )
string;;) /
reservationId;;0 =
);;= >
{<< 	
logger== 
.== 
LogInformation== !
(==! "
$"==" $
$str==$ 7
{==7 8
reservationId==8 E
}==E F
$str==F P
{==P Q
this==Q U
.==U V
GetPrimaryKeyString==V i
(==i j
)==j k
}==k l
"==l m
)==m n
;==n o
if>> 
(>> 
!>> 
state>> 
.>> 
State>> 
.>> 
IsInitialized>> *
)>>* +
{?? 
throw@@ 
new@@ %
UserDoesNotExistException@@ 3
(@@3 4
)@@4 5
;@@5 6
}AA 
thisCC 
.CC 
ReservationsCC 
.CC 
AddCC !
(CC! "
reservationIdCC" /
)CC/ 0
;CC0 1
awaitEE 
stateEE 
.EE 
WriteStateAsyncEE '
(EE' (
)EE( )
;EE) *
}FF 	
publicHH 
TaskHH 
<HH 
FullUserDetailsHH #
>HH# $
GetUserInfoHH% 0
(HH0 1
)HH1 2
{II 	
loggerJJ 
.JJ 
LogInformationJJ !
(JJ! "
$"JJ" $
$strJJ$ :
{JJ: ;
thisJJ; ?
.JJ? @
GetPrimaryKeyStringJJ@ S
(JJS T
)JJT U
}JJU V
"JJV W
)JJW X
;JJX Y
ifKK 
(KK 
!KK 
stateKK 
.KK 
StateKK 
.KK 
IsInitializedKK *
)KK* +
{LL 
throwMM 
newMM %
UserDoesNotExistExceptionMM 3
(MM3 4
)MM4 5
;MM5 6
}NN 
returnPP 
TaskPP 
.PP 

FromResultPP "
(PP" #
newPP# &
FullUserDetailsPP' 6
(PP6 7
statePP7 <
.PP< =
StatePP= B
,PPB C
ReservationsPPD P
)PPP Q
)PPQ R
;PPR S
}QQ 	
publicSS 
TaskSS 
<SS 
boolSS 
>SS 
IsInitializedSS '
(SS' (
)SS( )
{TT 	
returnUU 
TaskUU 
.UU 

FromResultUU "
(UU" #
stateUU# (
.UU( )
StateUU) .
.UU. /
IsInitializedUU/ <
)UU< =
;UU= >
}VV 	
}WW 
[YY 
GenerateSerializerYY 
,YY 
AliasYY 
(YY 
nameofYY %
(YY% &
UserDetailsYY& 1
)YY1 2
)YY2 3
]YY3 4
publicZZ 

sealedZZ 
recordZZ 
classZZ 
UserDetailsZZ *
{[[ 
[\\ 	
Id\\	 
(\\ 
$num\\ 
)\\ 
]\\ 
public]] 
string]] 
Name]] 
{]] 
get]]  
;]]  !
set]]" %
;]]% &
}]]' (
=]]) *
$str]]+ -
;]]- .
[^^ 	
Id^^	 
(^^ 
$num^^ 
)^^ 
]^^ 
public__ 
string__ 
Surname__ 
{__ 
get__  #
;__# $
set__% (
;__( )
}__* +
=__, -
$str__. 0
;__0 1
[`` 	
Id``	 
(`` 
$num`` 
)`` 
]`` 
publicaa 
boolaa 
IsInitializedaa !
{aa" #
getaa$ '
;aa' (
setaa) ,
;aa, -
}aa. /
=aa0 1
falseaa2 7
;aa7 8
}bb 
[cc 
GenerateSerializercc 
,cc 
Aliascc 
(cc 
nameofcc %
(cc% &
FullUserDetailscc& 5
)cc5 6
)cc6 7
]cc7 8
publicdd 

sealeddd 
recorddd 
classdd 
FullUserDetailsdd .
{ee 
publicff 
FullUserDetailsff 
(ff 
UserDetailsff *
userDetailsff+ 6
,ff6 7
Listff8 <
<ff< =
stringff= C
>ffC D
reservationsffE Q
)ffQ R
{gg 	
UserDetailshh 
=hh 
userDetailshh %
;hh% &
Reservationsii 
=ii 
reservationsii '
;ii' (
}jj 	
[kk 	
Idkk	 
(kk 
$numkk 
)kk 
]kk 
publicll 
UserDetailsll 
UserDetailsll &
{ll' (
getll) ,
;ll, -
setll. 1
;ll1 2
}ll3 4
[mm 	
Idmm	 
(mm 
$nummm 
)mm 
]mm 
publicnn 
Listnn 
<nn 
stringnn 
>nn 
Reservationsnn (
{nn) *
getnn+ .
;nn. /
setnn0 3
;nn3 4
}nn5 6
=nn7 8
newnn9 <
(nn< =
)nn= >
;nn> ?
}oo 
}pp ∞ 
gC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Controllers\ApiController.cs
	namespace 	
OrleansTicket
 
. 
Controllers #
{		 
[

 
Route

 

(


 
$str

 
)

 
]

 
[ 
ApiController 
] 
public 

class 
ApiController 
{ 
private 
readonly 
ILogger  
<  !
ApiController! .
>. /
_logger0 7
;7 8
private 
readonly 
IGrainFactory &
_grainFactory' 4
;4 5
public 
ApiController 
( 
ILogger $
<$ %
ApiController% 2
>2 3
logger4 :
,: ;
IGrainFactory< I
grainFactoryJ V
)V W
{ 	
_logger 
= 
logger 
; 
_grainFactory 
= 
grainFactory (
;( )
} 	
[ 	
HttpGet	 
( 
$str  
)  !
]! "
public 
async 
Task 
< 
Results !
<! "
NotFound" *
<* +
string+ 1
>1 2
,2 3
Ok4 6
<6 7
GetUserDataDTO7 E
>E F
>F G
>G H
GetUserDataI T
(T U
stringU [
email\ a
)a b
{ 	
_logger 
. 
LogInformation "
(" #
$"# %
$str% ;
{; <
email< A
}A B
"B C
)C D
;D E
var 
	userGrain 
= 
_grainFactory )
.) *
GetGrain* 2
<2 3

IUserGrain3 =
>= >
(> ?
email? D
)D E
;E F
try 
{ 
var 
userInfo 
= 
await $
	userGrain% .
.. /
GetUserInfo/ :
(: ;
); <
;< =
return   
TypedResults   #
.  # $
Ok  $ &
(  & '
new  ' *
GetUserDataDTO  + 9
(  9 :
	userGrain  : C
.  C D
GetPrimaryKeyString  D W
(  W X
)  X Y
,  Y Z
userInfo  [ c
.  c d
UserDetails  d o
.  o p
Name  p t
,  t u
userInfo  v ~
.  ~ 
UserDetails	   ä
.
  ä ã
Surname
  ã í
,
  í ì
userInfo
  î ú
.
  ú ù
Reservations
  ù ©
)
  © ™
)
  ™ ´
;
  ´ ¨
}!! 
catch"" 
("" %
UserDoesNotExistException"" ,
e""- .
)"". /
{## 
return$$ 
TypedResults$$ #
.$$# $
NotFound$$$ ,
($$, -
$str$$- B
)$$B C
;$$C D
}%% 
}&& 	
[(( 	
HttpPost((	 
((( 
$str(( 
)(( 
](( 
public)) 
async)) 
Task)) 
<)) 
Results)) !
<))! "

BadRequest))" ,
<)), -
string))- 3
>))3 4
,))4 5
Created))6 =
>))= >
>))> ?

CreateUser))@ J
())J K
[))K L
FromBody))L T
]))T U
CreateUserDTO))V c
createUserRequest))d u
)))u v
{** 	
_logger++ 
.++ 
LogInformation++ "
(++" #
$"++# %
$str++% 4
{++4 5
createUserRequest++5 F
.++F G
Email++G L
}++L M
"++M N
)++N O
;++O P
var,, 
	userGrain,, 
=,, 
_grainFactory,, )
.,,) *
GetGrain,,* 2
<,,2 3

IUserGrain,,3 =
>,,= >
(,,> ?
createUserRequest,,? P
.,,P Q
Email,,Q V
),,V W
;,,W X
try-- 
{.. 
var// 
	userEmail// 
=// 
await//  %
	userGrain//& /
./// 0
InitializeUser//0 >
(//> ?
createUserRequest//? P
.//P Q
Name//Q U
,//U V
createUserRequest//W h
.//h i
Surname//i p
)//p q
;//q r
return00 
TypedResults00 #
.00# $
Created00$ +
(00+ ,
	userEmail00, 5
)005 6
;006 7
}11 
catch22 
(22 
UserExistsException22 %
e22& '
)22' (
{33 
return44 
TypedResults44 #
.44# $

BadRequest44$ .
(44. /
$str44/ D
)44D E
;44E F
}55 
}66 	
[88 	
HttpPut88	 
(88 
$str88  
)88  !
]88! "
public99 
async99 
Task99 
<99 
Results99 !
<99! "
NotFound99" *
<99* +
string99+ 1
>991 2
,992 3
Ok994 6
>996 7
>997 8

ChangeUser999 C
(99C D
string99D J
email99K P
,99P Q
[99R S
FromBody99S [
]99[ \
UpdateUserDTO99] j
updateUserRequest99k |
)99| }
{:: 	
_logger;; 
.;; 
LogInformation;; "
(;;" #
$";;# %
$str;;% <
{;;< =
email;;= B
};;B C
";;C D
);;D E
;;;E F
var<< 
	userGrain<< 
=<< 
_grainFactory<< )
.<<) *
GetGrain<<* 2
<<<2 3

IUserGrain<<3 =
><<= >
(<<> ?
email<<? D
)<<D E
;<<E F
try== 
{>> 
await?? 
	userGrain?? 
.??  
UpdateUserInfo??  .
(??. /
updateUserRequest??/ @
.??@ A
Name??A E
,??E F
updateUserRequest??G X
.??X Y
Surname??Y `
)??` a
;??a b
return@@ 
TypedResults@@ #
.@@# $
Ok@@$ &
(@@& '
)@@' (
;@@( )
}AA 
catchBB 
(BB %
UserDoesNotExistExceptionBB ,
eBB- .
)BB. /
{CC 
returnDD 
TypedResultsDD #
.DD# $
NotFoundDD$ ,
(DD, -
$strDD- B
)DDB C
;DDC D
}EE 
}FF 	
[HH 	
HttpGetHH	 
(HH 
$strHH 
)HH 
]HH  
publicII 
asyncII 
TaskII 
<II 
ResultsII !
<II! "
NotFoundII" *
<II* +
stringII+ 1
>II1 2
,II2 3
OkII4 6
<II6 7
GetEventDataDTOII7 F
>IIF G
>IIG H
>IIH I
GetEventIIJ R
(IIR S
stringIIS Y
idIIZ \
,II\ ]
stringII^ d
currencyIIe m
)IIm n
{JJ 	
_loggerKK 
.KK 
LogInformationKK "
(KK" #
$"KK# %
$strKK% <
{KK< =
idKK= ?
}KK? @
"KK@ A
)KKA B
;KKB C
varLL 

eventGrainLL 
=LL 
_grainFactoryLL *
.LL* +
GetGrainLL+ 3
<LL3 4
IEventGrainLL4 ?
>LL? @
(LL@ A
GuidLLA E
.LLE F
ParseLLF K
(LLK L
idLLL N
)LLN O
)LLO P
;LLP Q
tryMM 
{NN 
varOO 
	eventInfoOO 
=OO 
awaitOO  %

eventGrainOO& 0
.OO0 1
GetFullEventInfoOO1 A
(OOA B
currencyOOB J
)OOJ K
;OOK L
varPP 
	seatsDataPP 
=PP 
	eventInfoPP  )
.PP) *
AvailableSeatsPP* 8
.PP8 9
SelectPP9 ?
(PP? @
seatPP@ D
=>PPE G
newPPH K
GetEventSeatDTOPPL [
(PP[ \
seatPP\ `
.PP` a
IdPPa c
,PPc d
seatPPe i
.PPi j
PricePPj o
)PPo p
)PPp q
.PPq r
ToListPPr x
(PPx y
)PPy z
;PPz {
returnQQ 
TypedResultsQQ #
.QQ# $
OkQQ$ &
(QQ& '
newQQ' *
GetEventDataDTOQQ+ :
(QQ: ;

eventGrainQQ; E
.QQE F
GetPrimaryKeyStringQQF Y
(QQY Z
)QQZ [
,QQ[ \
	eventInfoQQ] f
.QQf g
NameQQg k
,QQk l
	eventInfoQQm v
.QQv w
DurationQQw 
,	QQ Ä
	eventInfo
QQÅ ä
.
QQä ã
Location
QQã ì
,
QQì î
	eventInfo
QQï û
.
QQû ü
Date
QQü £
,
QQ£ §
	eventInfo
QQ• Æ
.
QQÆ Ø
Status
QQØ µ
,
QQµ ∂
	eventInfo
QQ∑ ¿
.
QQ¿ ¡
SeatsAmount
QQ¡ Ã
,
QQÃ Õ
	eventInfo
QQŒ ◊
.
QQ◊ ÿ"
AvailableSeatsAmount
QQÿ Ï
,
QQÏ Ì
	seatsData
QQÓ ˜
,
QQ˜ ¯
	eventInfo
QQ˘ Ç
.
QQÇ É
CheapestSeat
QQÉ è
)
QQè ê
)
QQê ë
;
QQë í
}RR 
catchSS 
(SS &
EventDoesNotExistExceptionSS -
eSS. /
)SS/ 0
{TT 
returnVV 
TypedResultsVV #
.VV# $
NotFoundVV$ ,
(VV, -
$strVV- C
)VVC D
;VVD E
}WW 
}XX 	
[ZZ 	
HttpPostZZ	 
(ZZ 
$strZZ 
)ZZ 
]ZZ 
public[[ 
async[[ 
Task[[ 
<[[ 
Created[[ !
>[[! "
CreateEvent[[# .
([[. /
[[[/ 0
FromBody[[0 8
][[8 9
CreateEventDTO[[: H
createEventRequest[[I [
)[[[ \
{\\ 	
_logger]] 
.]] 
LogInformation]] "
(]]" #
$"]]# %
$str]]% ;
{]]; <
createEventRequest]]< N
.]]N O
Name]]O S
}]]S T
"]]T U
)]]U V
;]]V W
var^^ 

eventGrain^^ 
=^^ 
_grainFactory^^ *
.^^* +
GetGrain^^+ 3
<^^3 4
IEventGrain^^4 ?
>^^? @
(^^@ A
Guid^^A E
.^^E F
NewGuid^^F M
(^^M N
)^^N O
)^^O P
;^^P Q
List__ 
<__ 
CreateSeatData__ 
>__  
seats__! &
=__' (
createEventRequest__) ;
.__; <
Seats__< A
.__A B
Select__B H
(__H I
seat__I M
=>__N P
new__Q T
CreateSeatData__U c
(__c d
seat__d h
.__h i
Price__i n
)__n o
)__o p
.__p q
ToList__q w
(__w x
)__x y
;__y z
var`` 
eventId`` 
=`` 
await`` 

eventGrain``  *
.``* +
InitializeEvent``+ :
(``: ;
createEventRequest``; M
.``M N
Name``N R
,``R S
createEventRequest``T f
.``f g
Duration``g o
,``o p
createEventRequest	``q É
.
``É Ñ
Location
``Ñ å
,
``å ç 
createEventRequest
``é †
.
``† °
Date
``° •
,
``• ¶
seats
``ß ¨
)
``¨ ≠
;
``≠ Æ
returnbb 
TypedResultsbb 
.bb  
Createdbb  '
(bb' (
eventIdbb( /
.bb/ 0
ToStringbb0 8
(bb8 9
)bb9 :
)bb: ;
;bb; <
}cc 	
[ee 	

HttpDeleteee	 
(ee 
$stree !
)ee! "
]ee" #
publicff 
asyncff 
Taskff 
<ff 
Resultsff !
<ff! "
NotFoundff" *
<ff* +
stringff+ 1
>ff1 2
,ff2 3
	NoContentff4 =
>ff= >
>ff> ?
CancelEventff@ K
(ffK L
stringffL R
idffS U
)ffU V
{gg 	
_loggerhh 
.hh 
LogInformationhh "
(hh" #
$"hh# %
$strhh% 6
{hh6 7
idhh7 9
}hh9 :
"hh: ;
)hh; <
;hh< =
varii 

eventGrainii 
=ii 
_grainFactoryii *
.ii* +
GetGrainii+ 3
<ii3 4
IEventGrainii4 ?
>ii? @
(ii@ A
GuidiiA E
.iiE F
ParseiiF K
(iiK L
idiiL N
)iiN O
)iiO P
;iiP Q
tryjj 
{kk 
awaitll 

eventGrainll  
.ll  !
CancelEventll! ,
(ll, -
)ll- .
;ll. /
returnmm 
TypedResultsmm #
.mm# $
	NoContentmm$ -
(mm- .
)mm. /
;mm/ 0
}nn 
catchoo 
(oo &
EventDoesNotExistExceptionoo -
eoo. /
)oo/ 0
{pp 
returnqq 
TypedResultsqq #
.qq# $
NotFoundqq$ ,
(qq, -
$strqq- C
)qqC D
;qqD E
}rr 
}ss 	
[uu 	
HttpPutuu	 
(uu 
$struu 
)uu 
]uu  
publicvv 
asyncvv 
Taskvv 
<vv 
Resultsvv !
<vv! "
NotFoundvv" *
<vv* +
stringvv+ 1
>vv1 2
,vv2 3
Okvv4 6
>vv6 7
>vv7 8
ChangeEventvv9 D
(vvD E
stringvvE K
idvvL N
,vvN O
[vvP Q
FromBodyvvQ Y
]vvY Z
UpdateEventDTOvv[ i
updateEventRequestvvj |
)vv| }
{ww 	
_loggerxx 
.xx 
LogInformationxx "
(xx" #
$"xx# %
$strxx% =
{xx= >
idxx> @
}xx@ A
"xxA B
)xxB C
;xxC D
varyy 

eventGrainyy 
=yy 
_grainFactoryyy *
.yy* +
GetGrainyy+ 3
<yy3 4
IEventGrainyy4 ?
>yy? @
(yy@ A
GuidyyA E
.yyE F
ParseyyF K
(yyK L
idyyL N
)yyN O
)yyO P
;yyP Q
tryzz 
{{{ 
var|| 
	eventInfo|| 
=|| 
await||  %

eventGrain||& 0
.||0 1
UpdateEventInfo||1 @
(||@ A
updateEventRequest||A S
.||S T
Name||T X
,||X Y
updateEventRequest||Z l
.||l m
Duration||m u
,||u v
updateEventRequest	||w â
.
||â ä
Location
||ä í
,
||í ì 
updateEventRequest
||î ¶
.
||¶ ß
Date
||ß ´
)
||´ ¨
;
||¨ ≠
return}} 
TypedResults}} #
.}}# $
Ok}}$ &
(}}& '
)}}' (
;}}( )
}~~ 
catch 
( &
EventDoesNotExistException -
e. /
)/ 0
{
ÄÄ 
return
ÅÅ 
TypedResults
ÅÅ #
.
ÅÅ# $
NotFound
ÅÅ$ ,
(
ÅÅ, -
$str
ÅÅ- C
)
ÅÅC D
;
ÅÅD E
}
ÇÇ 
}
ÉÉ 	
[
ÖÖ 	
HttpGet
ÖÖ	 
(
ÖÖ 
$str
ÖÖ 
)
ÖÖ 
]
ÖÖ 
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
Ok
ÜÜ 
<
ÜÜ 
GetEventsDataDTO
ÜÜ -
>
ÜÜ- .
>
ÜÜ. /
	GetEvents
ÜÜ0 9
(
ÜÜ9 :
string
ÜÜ: @
?
ÜÜ@ A
name
ÜÜB F
)
ÜÜF G
{
áá 	
_logger
àà 
.
àà 
LogInformation
àà "
(
àà" #
$"
àà# %
$str
àà% B
{
ààB C
name
ààC G
}
ààG H
"
ààH I
)
ààI J
;
ààJ K
var
ââ 
eventQueryGrain
ââ 
=
ââ  !
_grainFactory
ââ" /
.
ââ/ 0
GetGrain
ââ0 8
<
ââ8 9
IEventQueryGrain
ââ9 I
>
ââI J
(
ââJ K
Guid
ââK O
.
ââO P
NewGuid
ââP W
(
ââW X
)
ââX Y
)
ââY Z
;
ââZ [
var
ää 

eventInfos
ää 
=
ää 
await
ää "
eventQueryGrain
ää# 2
.
ää2 3
GetAllEvents
ää3 ?
(
ää? @
name
ää@ D
)
ääD E
;
ääE F
var
ãã 
	eventList
ãã 
=
ãã 

eventInfos
ãã &
.
ãã& '
Select
ãã' -
(
ãã- .
x
ãã. /
=>
ãã0 2
new
ãã3 6
GetEventsDataDTO
ãã7 G
.
ããG H
EventDTO
ããH P
(
ããP Q
x
ããQ R
.
ããR S
Id
ããS U
,
ããU V
x
ããW X
.
ããX Y
Name
ããY ]
)
ãã] ^
)
ãã^ _
.
ãã_ `
ToList
ãã` f
(
ããf g
)
ããg h
;
ããh i
return
çç 
TypedResults
çç 
.
çç  
Ok
çç  "
(
çç" #
new
çç# &
GetEventsDataDTO
çç' 7
(
çç7 8
	eventList
çç8 A
)
ççA B
)
ççB C
;
ççC D
}
éé 	
[
êê 	
HttpPost
êê	 
(
êê 
$str
êê 3
)
êê3 4
]
êê4 5
public
ëë 
async
ëë 
Task
ëë 
<
ëë 
Results
ëë !
<
ëë! "
NotFound
ëë" *
<
ëë* +
string
ëë+ 1
>
ëë1 2
,
ëë2 3

BadRequest
ëë4 >
<
ëë> ?
string
ëë? E
>
ëëE F
,
ëëF G
Created
ëëH O
>
ëëO P
>
ëëP Q
ReserveSeat
ëëR ]
(
ëë] ^
[
ëë^ _
FromBody
ëë_ g
]
ëëg h"
CreateReservationDTO
ëëi }'
createReservationRequestëë~ ñ
,ëëñ ó
stringëëò û
eventIdëëü ¶
,ëë¶ ß
stringëë® Æ
seatIdëëØ µ
)ëëµ ∂
{
íí 	
_logger
ìì 
.
ìì 
LogInformation
ìì "
(
ìì" #
$"
ìì# %
$str
ìì% D
{
ììD E
eventId
ììE L
}
ììL M
$str
ììM W
{
ììW X
seatId
ììX ^
}
ìì^ _
"
ìì_ `
)
ìì` a
;
ììa b
var
îî 
reservationGrain
îî  
=
îî! "
_grainFactory
îî# 0
.
îî0 1
GetGrain
îî1 9
<
îî9 :
IReservationGrain
îî: K
>
îîK L
(
îîL M
Guid
îîM Q
.
îîQ R
NewGuid
îîR Y
(
îîY Z
)
îîZ [
)
îî[ \
;
îî\ ]
try
ïï 
{
ññ 
var
óó 
reservationId
óó !
=
óó" #
await
óó$ )
reservationGrain
óó* :
.
óó: ;
ReserveSeat
óó; F
(
óóF G
eventId
óóG N
,
óóN O
seatId
óóP V
,
óóV W&
createReservationRequest
óóX p
.
óóp q
Email
óóq v
)
óóv w
;
óów x
return
òò 
TypedResults
òò #
.
òò# $
Created
òò$ +
(
òò+ ,
reservationId
òò, 9
.
òò9 :
ToString
òò: B
(
òòB C
)
òòC D
)
òòD E
;
òòE F
}
ôô 
catch
öö 
(
öö (
ReservationExistsException
öö -
e
öö. /
)
öö/ 0
{
õõ 
return
úú 
TypedResults
úú #
.
úú# $
NotFound
úú$ ,
(
úú, -
$str
úú- I
)
úúI J
;
úúJ K
}
ùù 
catch
ûû 
(
ûû (
EventDoesNotExistException
ûû -
e
ûû. /
)
ûû/ 0
{
üü 
return
†† 
TypedResults
†† #
.
††# $
NotFound
††$ ,
(
††, -
$str
††- C
)
††C D
;
††D E
}
°° 
catch
¢¢ 
(
¢¢ '
UserDoesNotExistException
¢¢ ,
e
¢¢- .
)
¢¢. /
{
££ 
return
§§ 
TypedResults
§§ #
.
§§# $
NotFound
§§$ ,
(
§§, -
$str
§§- B
)
§§B C
;
§§C D
}
•• 
catch
¶¶ 
(
¶¶ '
SeatDoesNotExistException
¶¶ ,
e
¶¶- .
)
¶¶. /
{
ßß 
return
®® 
TypedResults
®® #
.
®®# $
NotFound
®®$ ,
(
®®, -
$str
®®- B
)
®®B C
;
®®C D
}
©© 
catch
™™ 
(
™™ *
ReservationDeclinedException
™™ /
e
™™0 1
)
™™1 2
{
´´ 
return
¨¨ 
TypedResults
¨¨ #
.
¨¨# $

BadRequest
¨¨$ .
(
¨¨. /
$str
¨¨/ I
)
¨¨I J
;
¨¨J K
}
≠≠ 
}
ÆÆ 	
[
∞∞ 	

HttpDelete
∞∞	 
(
∞∞ 
$str
∞∞ '
)
∞∞' (
]
∞∞( )
public
±± 
async
±± 
Task
±± 
<
±± 
Results
±± !
<
±±! "
NotFound
±±" *
<
±±* +
string
±±+ 1
>
±±1 2
,
±±2 3
	NoContent
±±4 =
>
±±= >
>
±±> ?
CancelReservation
±±@ Q
(
±±Q R
string
±±R X
id
±±Y [
)
±±[ \
{
≤≤ 	
_logger
≥≥ 
.
≥≥ 
LogInformation
≥≥ "
(
≥≥" #
$"
≥≥# %
$str
≥≥% <
{
≥≥< =
id
≥≥= ?
}
≥≥? @
"
≥≥@ A
)
≥≥A B
;
≥≥B C
var
¥¥ 
reservationGrain
¥¥  
=
¥¥! "
_grainFactory
¥¥# 0
.
¥¥0 1
GetGrain
¥¥1 9
<
¥¥9 :
IReservationGrain
¥¥: K
>
¥¥K L
(
¥¥L M
Guid
¥¥M Q
.
¥¥Q R
Parse
¥¥R W
(
¥¥W X
id
¥¥X Z
)
¥¥Z [
)
¥¥[ \
;
¥¥\ ]
try
µµ 
{
∂∂ 
await
∑∑ 
reservationGrain
∑∑ &
.
∑∑& '
CancelReservation
∑∑' 8
(
∑∑8 9
)
∑∑9 :
;
∑∑: ;
return
∏∏ 
TypedResults
∏∏ #
.
∏∏# $
	NoContent
∏∏$ -
(
∏∏- .
)
∏∏. /
;
∏∏/ 0
}
ππ 
catch
∫∫ 
(
∫∫ .
 ReservationDoesNotExistException
∫∫ 3
e
∫∫4 5
)
∫∫5 6
{
ªª 
return
ºº 
TypedResults
ºº #
.
ºº# $
NotFound
ºº$ ,
(
ºº, -
$str
ºº- I
)
ººI J
;
ººJ K
}
ΩΩ 
}
ææ 	
[
¿¿ 	
HttpGet
¿¿	 
(
¿¿ 
$str
¿¿ $
)
¿¿$ %
]
¿¿% &
public
¡¡ 
async
¡¡ 
Task
¡¡ 
<
¡¡ 
Results
¡¡ !
<
¡¡! "
NotFound
¡¡" *
<
¡¡* +
string
¡¡+ 1
>
¡¡1 2
,
¡¡2 3
Ok
¡¡4 6
<
¡¡6 7#
GetReservationDataDTO
¡¡7 L
>
¡¡L M
>
¡¡M N
>
¡¡N O
GetReservation
¡¡P ^
(
¡¡^ _
string
¡¡_ e
id
¡¡f h
)
¡¡h i
{
¬¬ 	
_logger
√√ 
.
√√ 
LogInformation
√√ "
(
√√" #
$"
√√# %
$str
√√% B
{
√√B C
id
√√C E
}
√√E F
"
√√F G
)
√√G H
;
√√H I
var
ƒƒ 
reservationGrain
ƒƒ  
=
ƒƒ! "
_grainFactory
ƒƒ# 0
.
ƒƒ0 1
GetGrain
ƒƒ1 9
<
ƒƒ9 :
IReservationGrain
ƒƒ: K
>
ƒƒK L
(
ƒƒL M
Guid
ƒƒM Q
.
ƒƒQ R
Parse
ƒƒR W
(
ƒƒW X
id
ƒƒX Z
)
ƒƒZ [
)
ƒƒ[ \
;
ƒƒ\ ]
try
≈≈ 
{
∆∆ 
var
«« 
reservationInfo
«« #
=
««$ %
await
««& +
reservationGrain
««, <
.
««< = 
GetReservationInfo
««= O
(
««O P
)
««P Q
;
««Q R
return
»» 
TypedResults
»» #
.
»»# $
Ok
»»$ &
(
»»& '
new
»»' *#
GetReservationDataDTO
»»+ @
(
»»@ A
reservationInfo
»»A P
.
»»P Q
ReservationId
»»Q ^
.
»»^ _
ToString
»»_ g
(
»»g h
)
»»h i
,
»»i j
reservationInfo
»»k z
.
»»z {
Status»»{ Å
,»»Å Ç
reservationInfo»»É í
.»»í ì
EventId»»ì ö
,»»ö õ
reservationInfo»»ú ´
.»»´ ¨
SeatId»»¨ ≤
)»»≤ ≥
)»»≥ ¥
;»»¥ µ
}
…… 
catch
   
(
   .
 ReservationDoesNotExistException
   2
e
  3 4
)
  4 5
{
ÀÀ 
return
ÃÃ 
TypedResults
ÃÃ #
.
ÃÃ# $
NotFound
ÃÃ$ ,
(
ÃÃ, -
$str
ÃÃ- I
)
ÃÃI J
;
ÃÃJ K
}
ÕÕ 
}
ŒŒ 	
}
œœ 
}–– È
`C:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\CreateEventDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
CreateEventDTO &
{ 
public 
CreateEventDTO 
( 
string $
name% )
,) *
double+ 1
duration2 :
,: ;
string< B
locationC K
,K L
DateTimeM U
dateV Z
,Z [
List\ `
<` a
CreateEventSeatDTOa s
>s t
seatsu z
)z {
{ 	
Name 
= 
name 
; 
Duration 
= 
duration 
;  
Location		 
=		 
location		 
;		  
Date

 
=

 
date

 
;

 
Seats 
= 
seats 
; 
} 	
public 
string 
Name 
{ 
get  
;  !
}" #
public 
double 
Duration 
{  
get! $
;$ %
}& '
public 
string 
Location 
{  
get! $
;$ %
}& '
public 
DateTime 
Date 
{ 
get "
;" #
}$ %
public 
List 
< 
CreateEventSeatDTO &
>& '
Seats( -
{. /
get0 3
;3 4
}5 6
} 
} ù
dC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\CreateEventSeatDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
CreateEventSeatDTO *
{ 
public 
CreateEventSeatDTO !
(! "
double" (
price) .
). /
{ 	
Price 
= 
price 
; 
} 	
public		 
double		 
Price		 
{		 
get		 !
;		! "
}		# $
}

 
} £
fC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\CreateReservationDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class  
CreateReservationDTO ,
{ 
public  
CreateReservationDTO #
(# $
string$ *
email+ 0
)0 1
{ 	
Email 
= 
email 
; 
} 	
public		 
string		 
Email		 
{		 
get		 !
;		! "
}		# $
}

 
} ¯
_C:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\CreateUserDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
CreateUserDTO %
{ 
public 
CreateUserDTO 
( 
string #
email$ )
,) *
string+ 1
name2 6
,6 7
string8 >
surname? F
)F G
{ 	
Email 
= 
email 
; 
Name 
=  !
name" &
;& '
Surname( /
=0 1
surname2 9
;9 :
} 	
public		 
string		 
Email		 
{		 
get		 !
;		! "
}		# $
public

 
string

 
Name

 
{

 
get

  
;

  !
}

" #
public 
string 
Surname 
{ 
get  #
;# $
}% &
} 
} û
aC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\GetEventDataDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
GetEventDataDTO '
{ 
public 
GetEventDataDTO 
( 
string %
id& (
,( )
string* 0
name1 5
,5 6
double7 =
duration> F
,F G
stringH N
locationO W
,W X
DateTimeY a
dateb f
,f g
stringh n
statuso u
,u v
intw z
seatsAmount	{ Ü
,
Ü á
int
à ã"
availableSeatsAmount
å †
,
† °
List
¢ ¶
<
¶ ß
GetEventSeatDTO
ß ∂
> 
seats 
, 
double 
cheapestPrice )
)) *
{ 	
Id 
= 
id 
; 
Name		 
=		 
name		 
;		 
Duration

 
=

 
duration

 
;

  
Location 
= 
location 
;  
Date 
= 
date 
; 
SeatsAmount 
= 
seatsAmount %
;% & 
AvailableSeatsAmount  
=! " 
availableSeatsAmount# 7
;7 8

EventSeats 
= 
seats 
; 
Status 
= 
status 
; 
CheapestPrice 
= 
cheapestPrice )
;) *
} 	
public 
string 
Id 
{ 
get 
; 
}  !
public 
string 
Name 
{ 
get  
;  !
}" #
public 
double 
Duration 
{  
get! $
;$ %
}& '
public 
string 
Location 
{  
get! $
;$ %
}& '
public 
DateTime 
Date 
{ 
get "
;" #
}$ %
public 
string 
Status 
{ 
get "
;" #
}$ %
public 
int 
SeatsAmount 
{  
get! $
;$ %
}& '
public 
int  
AvailableSeatsAmount '
{( )
get* -
;- .
}/ 0
public 
List 
< 
GetEventSeatDTO #
># $

EventSeats% /
{0 1
get2 5
;5 6
}7 8
public 
double 
CheapestPrice #
{$ %
get& )
;) *
}+ ,
} 
} Á
bC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\GetEventsDataDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
GetEventsDataDTO (
{ 
public 
GetEventsDataDTO 
(  
List  $
<$ %
EventDTO% -
>- .
events/ 5
)5 6
{7 8
Events 
= 
events 
; 
} 	
public 
List 
< 
EventDTO 
> 
Events $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public		 
class		 
EventDTO		 
{

 	
public 
EventDTO 
( 
string "
id# %
,% &
string' -
name. 2
)2 3
{ 
Id 
= 
id 
; 
Name 
= 
name 
; 
} 
public 
string 
Id 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Name 
{  
get! $
;$ %
set& )
;) *
}* +
} 	
} 
} ˚
aC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\GetEventSeatDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
GetEventSeatDTO '
{ 
public 
GetEventSeatDTO 
( 
string %
id& (
,( )
double* 0
price1 6
)6 7
{ 	
Id 
= 
id 
; 
Price 
= 
price 
; 
}		 	
public

 
string

 
Id

 
{

 
get

 
;

  
}

! "
public 
double 
Price 
{ 
get !
;! "
}# $
} 
} É
gC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\GetReservationDataDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class !
GetReservationDataDTO -
{ 
public !
GetReservationDataDTO $
($ %
string% +
id, .
,. /
string0 6
status7 =
,= >
string? E
eventIdF M
,M N
stringO U
seatIdV \
)\ ]
{ 	
Id 
= 
id 
; 
Status 
= 
status 
; 
EventId		 
=		 
eventId		 
;		 
SeatId

 
=

 
seatId

 
;

 
} 	
public 
string 
Id 
{ 
get 
; 
}  !
public 
string 
Status 
{ 
get "
;" #
}$ %
public 
string 
EventId 
{ 
get  #
;# $
}% &
public 
string 
SeatId 
{ 
get "
;" #
}$ %
} 
} Í
`C:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\GetUserDataDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
GetUserDataDTO &
{ 
public 
GetUserDataDTO 
( 
string $
email% *
,* +
string, 2
name3 7
,7 8
string9 ?
surname@ G
,G H
ListI M
<M N
stringN T
>T U
reservationsV b
)b c
{ 	
Email 
= 
email 
; 
Name 
=  !
name" &
;& '
Surname( /
=0 1
surname2 9
;9 :
Reservations; G
=H I
reservationsJ V
;V W
} 	
public		 
string		 
Email		 
{		 
get		 !
;		! "
}		# $
public

 
string

 
Name

 
{

 
get

  
;

  !
}

" #
public 
string 
Surname 
{ 
get  #
;# $
}% &
public 
List 
< 
string 
> 
Reservations )
{* +
get, /
;/ 0
}1 2
} 
} ˛

`C:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\UpdateEventDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
UpdateEventDTO &
{ 
public 
UpdateEventDTO 
( 
string $
name% )
,) *
double+ 1
duration2 :
,: ;
string< B
locationC K
,K L
DateTimeM U
dateV Z
)Z [
{ 	
Name 
= 
name 
; 
Duration 
= 
duration 
;  
Location		 
=		 
location		 
;		  
Date

 
=

 
date

 
;

 
} 	
public 
string 
Name 
{ 
get  
;  !
}" #
public 
double 
Duration 
{  
get! $
;$ %
}& '
public 
string 
Location 
{  
get! $
;$ %
}& '
public 
DateTime 
Date 
{ 
get "
;" #
}$ %
} 
} Ö
_C:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\DTO\UpdateUserDTO.cs
	namespace 	
OrleansTicket
 
. 
DTO 
{ 
public 

sealed 
class 
UpdateUserDTO %
{ 
public 
UpdateUserDTO 
( 
string #
name$ (
,( )
string* 0
surname1 8
)8 9
{ 	
Name 
= 
name 
; 
Surname  
=! "
surname# *
;* +
} 	
public		 
string		 
Name		 
{		 
get		  
;		  !
}		" #
public

 
string

 
Surname

 
{

 
get

  #
;

# $
}

% &
} 
} ˝
rC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\EventDoesNotExistException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class &
EventDoesNotExistException +
:, -
SystemException. =
{ 
} 
} Ò
lC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\EventExistsException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class  
EventExistsException %
:& '
SystemException( 7
{ 
} 
} Û
mC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\NoConnectionException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class !
NoConnectionException &
:' (
SystemException) 8
{ 
} 
} Å
tC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\ReservationDeclinedException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class (
ReservationDeclinedException -
:. /
SystemException0 ?
{ 
} 
} â
xC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\ReservationDoesNotExistException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class ,
 ReservationDoesNotExistException 1
:2 3
SystemException4 C
{ 
} 
} ˝
rC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\ReservationExistsException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class &
ReservationExistsException +
:, -
SystemException. =
{ 
} 
} ˚
qC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\SeatDoesNotExistException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class %
SeatDoesNotExistException *
:+ ,
SystemException- <
{ 
} 
} ˚
qC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\UserDoesNotExistException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class %
UserDoesNotExistException *
:+ ,
SystemException- <
{ 
} 
} Ô
kC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Exception\UserExistsException.cs
	namespace 	
OrleansTicket
 
. 
	Exception !
{ 
public 

class 
UserExistsException $
:% &
SystemException' 6
{ 
} 
} ±
UC:\Users\mkuczynski11\Desktop\magisterka\repos\OrleansTicket\OrleansTicket\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder		 
.		 
Services		 
.		 #
AddEndpointsApiExplorer		 (
(		( )
)		) *
;		* +
builder

 
.

 
Services

 
.

 
AddSwaggerGen

 
(

 
)

  
;

  !
builder 
. 
Host 
. 

UseOrleans 
( 
static 
siloBuilder *
=>+ -
{ 
siloBuilder 
. "
UseLocalhostClustering &
(& '
siloPort' /
:/ 0
$num1 6
,6 7
gatewayPort8 C
:C D
$numE J
)J K
;K L
siloBuilder 
. 
	Configure 
< 
ClusterOptions (
>( )
() *
options* 1
=>2 4
{ 
options 
. 
	ClusterId 
= 
$str &
;& '
options 
. 
	ServiceId 
= 
$str '
;' (
} 
) 
; 
siloBuilder 
. 
UseAdoNetClustering #
(# $
options$ +
=>, .
{ 
options 
. 
	Invariant 
= 
$str $
;$ %
options 
. 
ConnectionString  
=! "
$str# r
;r s
} 
) 
; 
siloBuilder"" 
."" !
AddAdoNetGrainStorage"" %
(""% &
$str""& -
,""- .
options""/ 6
=>""7 9
{## 
options&& 
.&& 
	Invariant&& 
=&& 
$str&& $
;&&$ %
options'' 
.'' 
ConnectionString''  
=''! "
$str''# r
;''r s
}(( 
)(( 
;(( 
siloBuilder)) 
.)) 
UseDashboard)) 
()) 
options)) $
=>))% '
{))( )
}))* +
)))+ ,
;)), -
}** 
)** 
;** 
var,, 
app,, 
=,, 	
builder,,
 
.,, 
Build,, 
(,, 
),, 
;,, 
if// 
(// 
app// 
.// 
Environment// 
.// 
IsDevelopment// !
(//! "
)//" #
)//# $
{00 
app11 
.11 

UseSwagger11 
(11 
)11 
;11 
app22 
.22 
UseSwaggerUI22 
(22 
)22 
;22 
}33 
app55 
.55 
UseAuthorization55 
(55 
)55 
;55 
app77 
.77 
MapControllers77 
(77 
)77 
;77 
app99 
.99 
Run99 
(99 
)99 	
;99	 
